# A RelaxNG for LaTeXML documents with OMDoc parts
# https://github.com/KWARC/sTeX/blob/master/schema/rnc/ltxml+omdoc.rnc 
# See the documentation and examples at http://omdoc.org
# (c) 2012 Michael Kohlhase, released under the GNU Public License (GPL)

default namespace = "http://dlmf.nist.gov/LaTeXML"

## we include the LaTeXML schema, it will be extended below. 
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> fixing schema to get definitions working
include "LaTeXML.rnc" {Common.attributes &= morecomm.attribs & fragid.att?}
morecomm.attribs = grammar {include "omdoc/omdoc-common.rnc" 
		                                 dublincore=notAllowed
						 start=id.attribs}
<<<<<<< HEAD

# these should be integrated into back into the LaTeXML schema
Flow.class = text & Inline.class & Block.class & Misc.class & Meta.class
# this seems to be missing in the schema
fragid.att = attribute fragid {text}

Inline.class &= grammar {include "omdoc/omdoc.rnc" 
	     {start=inline.class}
	    id.attribs &= parent fragid.att?}

Block.class &= grammar {include "omdoc/omdoc.rnc" 
             {start=plike.class
	      inline.class &= parent Inline.class}
	     id.attribs &= parent fragid.att?}

Para.class &= grammar {include "omdoc/omdoc.rnc" 
             {start=omdoc.class
	      inline.class &= parent Inline.class
	      plike.class &= parent Block.class}
	     id.attribs &= parent fragid.att?
	     omdoc.class &= parent Flow.class 
	     render.class |= parent Math | parent \text}
=======

include "LaTeXML.rnc"
=======
>>>>>>> fixing schema to get definitions working

# these should be integrated into back into the LaTeXML schema
Flow.class = text & Inline.class & Block.class & Misc.class & Meta.class
# this seems to be missing in the schema
fragid.att = attribute fragid {text}

Inline.class &= grammar {include "omdoc/omdoc.rnc" 
	     {start=inline.class}
	    id.attribs &= parent fragid.att?}

Block.class &= grammar {include "omdoc/omdoc.rnc" 
             {start=plike.class
	      inline.class &= parent Inline.class}
	     id.attribs &= parent fragid.att?}

<<<<<<< HEAD
Para.class &= grammar {include "omdoc/omdoc.rnc" {start=omdoc.class}
<<<<<<< HEAD
   				      omdoc.class &= parent Flow.class 
				      render.class |= parent Math | parent \text}
>>>>>>> fixed model generation
=======
=======
Para.class &= grammar {include "omdoc/omdoc.rnc" 
             {start=omdoc.class
	      inline.class &= parent Inline.class
	      plike.class &= parent Block.class}
>>>>>>> fixing schema to get definitions working
	     id.attribs &= parent fragid.att?
	     omdoc.class &= parent Flow.class 
	     render.class |= parent Math | parent \text}
>>>>>>> fixing fragid



