# -*- CPERL -*-
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
DeclareOption('mh', sub {AssignValue ('@structview' => 1,'global');
PassOptions('modules','sty',ToString(Digest(T_CS('\CurrentOption'))));});
DeclareOption(undef,sub {PassOptions('modules','sty',ToString(Digest(T_CS('\CurrentOption')))); });
ProcessOptions();
if(LookupValue('@structview')) {RequirePackage('structview-mh');}
RequirePackage('modules');
DefKeyVal('view','id','Semiverbatim');
DefKeyVal('view','from','Semiverbatim');
DefKeyVal('view','to','Semiverbatim');
DefKeyVal('view','title','Semiverbatim');
DefKeyVal('view','creators','Semiverbatim');
DefKeyVal('view','contributors','Semiverbatim');
DefKeyVal('view','display','Semiverbatim');
DefKeyVal('view','ext','Semiverbatim');
DefMacroI(T_CS('\begin{view}'),'OptionalKeyVals:view {}{}', sub {
  my ($gullet, $keyvals, $from_arg, $to_arg) = @_;
  my $from = ToString(Digest($from_arg));
  my $to = ToString(Digest($to_arg));
  my $from_file = ToString(GetKeyVal($keyvals,'from'));
  my $to_file = ToString(GetKeyVal($keyvals,'to'));
  my $ext = ToString(GetKeyVal($keyvals,'ext')) if $keyvals;
  $ext = 'sms' unless $ext;
  return (
    Tokenize("\\importmoduleI[load=$from_file]{$from}")->unlist,
    Tokenize("\\importmoduleI[load=$to_file]{$to}")->unlist,
    Invocation(T_CS('\begin{viewenv}'),$keyvals,$from_arg,$to_arg)->unlist
  );
});
DefMacroI('\end{view}',undef,'\end{viewenv}');
DefEnvironment('{viewenv} OptionalKeyVals:view {}{}',
   "<omdoc:theory-inclusion from='#2' to='#3'"
  .      " ?&defined(&GetKeyVal(#1,'id'))(xml:id='&GetKeyVal(#1,'id')')()>"
  .  "<omdoc:morphism>#body</omdoc:morphism>"
  ."</omdoc:theory-inclusion>");
# do the same for viewsketch, pity we cannot share some code.
DefMacroI(T_CS('\begin{viewsketch}'),'OptionalKeyVals:view {}{}', sub {
  my ($gullet, $keyvals, $from_arg, $to_arg) = @_;
  my $from = ToString(Digest($from_arg));
  my $to = ToString(Digest($to_arg));
  my $from_file = ToString(GetKeyVal($keyvals,'from'));
  my $to_file = ToString(GetKeyVal($keyvals,'to'));
  my $ext = ToString(GetKeyVal($keyvals,'ext')) if $keyvals;
  $ext = 'sms' unless $ext;
  return (
    Tokenize("\\importmoduleI[load=$from_file]{$from}")->unlist,
    Tokenize("\\importmoduleI[load=$to_file]{$to}")->unlist,
    Invocation(T_CS('\begin{viewsketchenv}'),$keyvals,$from_arg,$to_arg)->unlist
  );
});
DefMacroI('\end{viewsketch}',undef,'\end{viewsketchenv}');
DefEnvironment('{viewsketchenv} OptionalKeyVals:view {}{}',
   "<omdoc:theory-inclusion from='#2' to='#3'"
  .      " ?&defined(&GetKeyVal(#1,'id'))(xml:id='&GetKeyVal(#1,'id')')()>"
  .  "#body"
  ."</omdoc:theory-inclusion>");
DefConstructor('\obligation [] {} {}',"<omdoc:obligation induced-by='#2' assertion='#3'/>");
1;
