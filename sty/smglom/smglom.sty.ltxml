# -*- CPERL -*-
package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;

DeclareOption(undef,sub {PassOptions('omdoc','cls',ToString(Digest(T_CS('\CurrentOption')))); });
ProcessOptions();
RequirePackage('amstext');
RequirePackage('modules');
RequirePackage('dcm');
RequirePackage('statements');
RequirePackage('sproof');
RequirePackage('cmath');
RequirePackage('smultiling',options => ['langfiles']);
RequirePackage('presentation');
RequirePackage('amsfonts');
DefMacro('\gimport',' \@ifstar\@gimport@star\@gimport@nostar');
DefMacro('\@gimport@star[]{}','\g@import[conservative=true,ext=tex,path=#2]{#1}{#2}');
DefMacro('\@gimport@nostar[]{}','\g@import[conservative=false,ext=tex,path=#2]{#1}{#2}');
DefConstructor('\g@import OptionalKeyVals:importmhmodule {}{}',
       "<omdoc:imports "
       . "from='?&GetKeyVal(#1,'load')(&canonical_omdoc_path(&GetKeyVal(#1,'load')))()#\e
       #2'  "
       . "conservative='&GetKeyVal(#1,'conservative')'/>",
  afterDigest => \&gimportI);
 sub gimportI {
  my ($stomach,$whatsit) = @_;
  my $keyval = $whatsit->getArg(1);
  my $repos = ToString($whatsit->getArg(2));
  my $name = $whatsit->getArg(3);
  if ($repos) {
    $keyval->setValue('repos',$repos); }
  else {
    $keyval->setValue('repos',LookupValue('current_repos')); }
  # Mystery: Why does $whatsit->setArgs($keyval,$name) raise a warning for
  #          "odd numbers" in hash assignment? Workaround for now!
  $$whatsit{args}[1] = $name; # Intention: $whatsit->setArg(2,$name);
  undef $$whatsit{args}[2]; # Intention: $whatsit->deleteArg(3);
  importMHmoduleI($stomach,$whatsit);
  return; }#$
DefMacro('\guse[]{}','\g@use[ext=tex,path=#2]{#1}{#2}');
DefConstructor('\g@use OptionalKeyVals:importmhmodule {} {}',
  "<omdoc:uses
  from='?&GetKeyVal(#1,'load')(&canonical_omdoc_path(&GetKeyVal(#1,'load')))()#\e
  #2'/>",
  afterDigest => \&gimportI);
DefMacro('\gadopt[]{}','\g@adopt[ext=tex,path=#2]{#1}{#2}');
DefConstructor('\g@adopt OptionalKeyVals:importmhmodule {} {}',
  "<omdoc:adopts
  from='?&GetKeyVal(#1,'load')(&canonical_omdoc_path(&GetKeyVal(#1,'load')))()#\e
  #2'/>",
  afterDigest => \&gimportI);
DefConstructor('\hypernym [] {}{}',"");
DefConstructor('\hyponym [] {}{}',"");
DefConstructor('\meronym [] {}{}',"");
DefConstructor('\MSC{}',"");
RawTeX('
\newenvironment{gviewsig}[4][]{%
  \def\test{#1}%
  \ifx\@test\@empty%
    \begin{mhviewsig}[frompath=#3,topath=#4]{#2}{#3}{#4}%
  \else%
    \begin{mhviewsig}[frompath=#3,topath=#4,#1]{#2}{#3}{#4}%
  \fi%
}{%
  \end{mhviewsig}%
}%
\newenvironment{gviewnl}[5][]{%
  \def\@test{#1}\ifx\@test\@empty%
    \begin{mhviewnl}[frompath=#4,topath=#5]{#2}{#3}{#4}{#5}%
  \else%
    \begin{mhviewnl}[#1,frompath=#4,topath=#5]{#2}{#3}{#4}{#5}%
  \fi%
}{%
  \end{mhviewnl}%
}%
');
DefKeyVal('modnl','state','Semiverbatim');
DefConstructor('\shadow{}{}','');
DefConstructor('\MathHubPath{}','');
1;
