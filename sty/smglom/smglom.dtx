% \iffalse meta-comment
% A LaTeX Class and Package for the SMGloM Glossary
% Copyright (c) 2009 Michael Kohlhase, all rights reserved
%               this file is released under the
%               LaTeX Project Public License (LPPL)
%
% The development version of this file can be found at
% $HeadURL: https://svn.kwarc.info/repos/stex/trunk/sty/smglom/smglom.dtx $
% \fi
%   
% \iffalse
%<package|cls>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<cls>\ProvidesClass{smglom}[2013/05/27 v0.1 Semantic Multilingual Glossary for Math]
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{url,array,omdoc,omtext,float}
\usepackage[show]{ed}
\usepackage[hyperref=auto,style=alphabetic]{biblatex}
\bibliography{kwarc}
\usepackage{stex-logo}
\usepackage{../ctansvn}
\usepackage{hyperref}
\makeindex
\floatstyle{boxed}
\newfloat{exfig}{thp}{lop}
\floatname{exfig}{Example}
\def\tracissue#1{\cite{sTeX:online}, \hyperlink{hstp://trac.kwarc.info/sTeX/ticket/#1}{issue #1}}
\begin{document}\DocInput{smglom.dtx}\end{document}
%</driver>
% \fi
% 
%\iffalse\CheckSum{382}\fi
% 
% \changes{v0.1}{2013/12/17}{First Version}
% \changes{v0.1}{2014/2/17}{Renamed ad split into \texttt{smglom.sty} and \texttt{smglom.cls}}
%
% 
% \MakeShortVerb{\|}
%
% \def\omdoc{OMDoc}
% \def\latexml{{\LaTeX}ML}
% \title{{\texttt{smglom.cls/sty}}: Semantic Multilingual Glossary for Math}
%    \author{Michael Kohlhase\\
%            Jacobs University, Bremen\\
%            \url{http://kwarc.info/kohlhase}}
% \maketitle
%
% \begin{abstract}
%   The |omdoc| package is part of the {\sTeX} collection, a version of {\TeX/\LaTeX} that
%   allows to markup {\TeX/\LaTeX} documents semantically without leaving the document
%   format, essentially turning {\TeX/\LaTeX} into a document format for mathematical
%   knowledge management (MKM).
%
%   This package supplies an infrastructure for writing {\omdoc} glossary entries. 
% \end{abstract}
%
%\newpage\tableofcontents\newpage
% 
%\begin{omgroup}[id=sec:STR]{Introduction}
%
% \end{omgroup}
% 
% \begin{omgroup}[id=sec:user]{The User Interface}\
% 
%
% \begin{omgroup}[id=sec:user:options]{Package and Class Options}
%   |smglom.cls| accepts all options of the |omdoc.cls| and |article.cls| and just passes
%   them on to these.  \ednote{describe them}
% \end{omgroup}
% 
% \end{omgroup}
% 
% \StopEventually{\newpage\PrintIndex\newpage\PrintChanges\printbibliography}\newpage
%
% \begin{omgroup}[id=sec:impl:cls]{Implementation: The OMDoc Class}
%
% \begin{omgroup}[id=sec:impl:cls:options]{Class Options}
% To initialize the |omdoc| class, we declare and process the necessary options.  
% 
%    \begin{macrocode}
%<*cls>
\DeclareOption{showmeta}{\PassOptionsToPackage{\CurrentOption}{metakeys}}
\ProcessOptions
%</cls>
%<*ltxml.cls>
# -*- CPERL -*-
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
ProcessOptions();
%</ltxml.cls>
%    \end{macrocode}
%
% We load |omdoc.cls|, and the desired packages. For the {\latexml} bindings, we make
% sure the right packages are loaded.
%
%    \begin{macrocode}
%<*cls>
\LoadClass{omdoc}
\RequirePackage{amstext}
\RequirePackage{modules}
\RequirePackage{statements}
\RequirePackage{sproof}
\RequirePackage{cmath}
\RequirePackage{presentation}
\RequirePackage{amsfonts}
\RequirePackage[english,ngerman]{babel}
%</cls>
%<*ltxml.cls>
LoadClass('omdoc');
RequirePackage('amstext');
RequirePackage('modules');
RequirePackage('statements');
RequirePackage('cmath');
RequirePackage('presentation');
RequirePackage('amsfonts');
RequirePackage('babel',options=>['english','ngerman']);
RequirePackage('smglom');
%</ltxml.cls>
%    \end{macrocode}
% \end{omgroup}
%
% \begin{omgroup}[id=sec:impl:input]{Input}
%
% \begin{macro}{ginput}
%   iterates over the language bindings.
%    \begin{macrocode}
%<ltxml.sty>RawTeX('
%<*sty|ltxml.sty>
\newcommand\ginput[2][]{\input{#2}\@for\@I:=#1\do{\input{#2.\@I}}}
%    \end{macrocode}
% \end{macro}
% \end{omgroup} 
% 
% \begin{omgroup}[id=sec:module-defs]{For Module Definitions}
%
% \begin{macro}{gimport}
%   just a shortcut
%    \begin{macrocode}
\newcommand\gimport[2][]{\def\@test{#1}%
\ifx\@test\@empty\importmhmodule[smglom/smglom]{#2}{#2}%
\else\importmhmodule[smglom/#1]{#2}{#2}\fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{guse}
%   just a shortcut
%    \begin{macrocode}
\newcommand\guse[2][]{\def\@test{#1}%
\ifx\@test\@empty\usemhmodule[smglom/smglom]{#2}{#2}%
\else\usemhmodule[smglom/#1]{#2}{#2}\fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{gadopt}
%   just a shortcut
%    \begin{macrocode}
\newcommand\gadopt[2][]{\def\@test{#1}%
\ifx\@test\@empty\adoptmhmodule[smglom/smglom]{#2}{#2}%
\else\adoptmhmodule[smglom/#1]{#2}{#2}\fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{gview}
%   The |gview| environment is just a layer over the |view| environment with the keys
%   suitably adapted.
%    \begin{macrocode}
\newenvironment{gview}[3][]%
{\def\@test{#1}\ifx\@test\@empty\begin{view}[from=#2,to=#3]{#2}{#3}\else\begin{view}[from=#2,to=#3,#1]{#2}{#3}\fi}
{\end{view}}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{gviewsketch}
%   The |gviewsketch| environment is just a layer over the |viewsketch| environment with the keys
%   suitably adapted.
%    \begin{macrocode}
\newenvironment{gviewsketch}[3][]%
{\def\@test{#1}\ifx\@test\@empty\begin{viewsketch}[from=#2,to=#3]{#2}{#3}\else\begin{viewsketch}[from=#2,to=#3,#1]{#2}{#3}\fi}
{\end{viewsketch}}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{gve}
%   The |gve| environment is just a layer over the |gviewsketch| environment with the keys and
%   language suitably adapted.
%    \begin{macrocode}
\def\@@en{en}\def\@@de{de}
\newenvironment{gve}[5][]{\def\@test{#1}%
\ifx\@test\@empty\begin{gviewsketch}[id=#2.#3]{#4}{#5}\else\begin{gviewsketch}[id=#2.#3,#1]{#4}{#5}\fi
\def\@test{#3}%
\ifx\@test\@@en\selectlanguage{english}\fi
\ifx\@test\@@de\selectlanguage{ngerman}\fi}
{\end{gviewsketch}}
%</sty|ltxml.sty>
%<ltxml.sty>');
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{symbol}
%   has a starred form for primary symbols. Both do nothing.
%    \begin{macrocode}
%<*sty>
\def\symbol{\@ifstar\@gobble\@gobble} 
%</sty>
%<*ltxml.sty>
DefConstructor('\symbol OptionalMatch:* {}',"<omdoc:symbol name='#1'/>");
%</ltxml.sty>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{*nym}
%    \begin{macrocode}
%<*cls>
\newcommand\hypernym[3][]{#2 is a hypernym of #3}
\newcommand\hyponym[3][]{#2 is a hyponym of  #3}
\newcommand\meronym[3][]{#2 is a meronym of #3}
%</cls>
%<*ltxml.cls>
DefConstructor('\hypernym [] {}{}',"");
DefConstructor('\hyponym [] {}{}',"");
DefConstructor('\meronym [] {}{}',"");
%</ltxml.cls>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\MSC}
%   to define the Math Subject Classification, \ednote{MK: what to do for the LaTeXML side?}
%    \begin{macrocode}
%<*cls>
\newcommand\MSC{\@gobble}
%</cls>
%<*ltxml.cls>
DefConstructor('\MSC{}',"");
%</ltxml.cls>
%    \end{macrocode}
% \end{macro}
% \end{omgroup}
% 
% \begin{omgroup}[id=sec:langbindings]{For Language Bindings}
%
% \begin{environment}{gle}
%   The |gle| environment is just a layer over the |module| environment with the keys and
%   language suitably adapted.
%    \begin{macrocode}
%<ltxml.sty>RawTeX('
%<*sty|ltxml.sty>
\def\@@en{en}\def\@@de{de}
\newenvironment{gle}[3][]{\def\@test{#1}%
\ifx\@test\@empty\begin{module}[id=#2.#3]\else\begin{module}[id=#2.#3,#1]\fi
\gimport{#2}\def\@test{#3}%
\ifx\@test\@@en\selectlanguage{english}\fi
\ifx\@test\@@de\selectlanguage{ngerman}\fi}
{\end{module}}
%</sty|ltxml.sty>
%<ltxml.sty>');
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{noun}
%    \begin{macrocode}
%<*cls>
\newcommand\noun[2]{}
%</cls>
%<*ltxml.cls>
DefMacro('\noun {}{}','');
%</ltxml.cls>
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{qualifier}
%    \begin{macrocode}
%<*cls>
\newcommand\qualifier[3]{}
%</cls>
%<*ltxml.cls>
DefMacro('\qualifier {}{}{}','');
%</ltxml.cls>
%    \end{macrocode}
% \end{macro}
% \end{omgroup}
% \end{omgroup} 
% \Finale
\endinput
% \iffalse
%%% Local Variables: 
%%% mode: doctex
%%% TeX-master: t
%%% End: 
% \fi

% LocalWords:  iffalse cls smglo smglo.dtx omdoc latexml texttt smlog.cls sref
% LocalWords:  maketitle newpage tableofcontents newpage omgroup ednote ltxml
% LocalWords:  printbibliography showmeta metakeys amstext ginput newcommand
% LocalWords:  module-defs gimport renewcommand langbindings gle newenvironment
% LocalWords:  doctex
