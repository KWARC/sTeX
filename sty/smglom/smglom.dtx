% \iffalse meta-comment
% A LaTeX Class and Package for the SMGloM Glossary
% Copyright (c) 2019 Michael Kohlhase, all rights reserved
%               this file is released under the
%               LaTeX Project Public License (LPPL)
%
% The original of this file is in the public repository at 
% http://github.com/sLaTeX/sTeX/
% \fi
%   
% \iffalse
%<package|cls>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<cls>\ProvidesClass{smglom}[2019/03/20 v0.2 Semantic Multilingual Glossary for Math]
%<sty>\ProvidesPackage{smglom}[2019/11/19 v0.2 Semantic Multilingual Glossary for Math]
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[utf8]{inputenc}
\usepackage{url,array,omdoc,omtext,float,paralist}
\usepackage[show]{ed}
\usepackage[hyperref=auto,style=alphabetic]{biblatex}
\addbibresource{kwarcpubs.bib}
\addbibresource{extpubs.bib}
\addbibresource{kwarccrossrefs.bib}
\addbibresource{extcrossrefs.bib}
\usepackage{stex-logo}
\usepackage{ctangit}
\usepackage{hyperref}
\makeindex
\floatstyle{boxed}
\newfloat{exfig}{thp}{lop}
\floatname{exfig}{Example}
\def\githubissue#1{\cite{sTeX:github:on}, \hyperlink{hstp://trac.kwarc.info/sTeX/ticket/#1}{issue #1}}
\begin{document}
\DocInput{smglom.dtx}
\end{document}
%</driver>
% \fi
% 
%\iffalse\CheckSum{152}\fi
% 
% \changes{v0.1}{2013/12/17}{First Version}
% \changes{v0.1}{2014/02/17}{Renamed ad split into \texttt{smglom.sty} and \texttt{smglom.cls}}
% \changes{v0.2}{2019/11/19}{Added support for localization}
%
% 
% \MakeShortVerb{\|}
%
% \def\omdoc{OMDoc\xspace}
% \def\smglom{SMGloM\xspace}
% \def\latexml{{\LaTeX}ML\xspace}
% \title{{\texttt{smglom.cls/sty}}: Semantic Multilingual Glossary for Math}
%    \author{Michael Kohlhase\\
%    FAU Erlangen-N\"urnberg\\
%    \url{http://kwarc.info/kohlhase}}
% \maketitle
%
% \begin{abstract}
%   The |smglom| package and class are part of the \sTeX collection, a version of
%   {\TeX/\LaTeX} that allows to markup {\TeX/\LaTeX} documents semantically without
%   leaving the document format, essentially turning {\TeX/\LaTeX} into a document format
%   for mathematical knowledge management (MKM).
%
%   This package supplies an infrastructure for writing {\omdoc} glossary entries. 
% \end{abstract}
%
%\tableofcontents\newpage
% 
%\begin{omgroup}[id=sec:STR]{Introduction}
%  We use \sTeX as the surface language for the SMGLoM (Semantic Multilingual Glossary of
%  Mathematics), see ~\cite{GinIanJuc:spsttom16,Kohlhase:dmesmgm14,SMGloM:git}. The
%  |smglom| package and class provides some infrastructure to make this more convenient.
% \end{omgroup}
% 
% \begin{omgroup}[id=sec:user]{The User Interface}
% 
%   The |smglom| package provides convenience macros on top of the \sTeX infrastructure to
%   simplify writing SMGloM glossary modules and make them more concise for reading.The
%   |smglom| class just sets up the necessary \sTeX packages and loads the |smglom|
%   package. 
% 
% \begin{omgroup}[id=sec:user:options]{Package and Class Options}
%   |smglom.sty| accepts all options of the \sTeX package and passes them along to
%   |stex.sty|~\ctancite{Kohlhase:ssmtl}. |smglom.cls| also does that for the casses
%   |omdoc.cls|~\cite{Kohlhase:smomdl} and |article.cls|.
% \end{omgroup}
% 
% \begin{omgroup}[id=user:modules]{Convenience Macros for \protect\smglom Modules}
%
% The SMGloM source files are more regular than arbitrary \sTeX files. In particular, 
% \begin{compactitem}
% \item make heavy use of the |smultiling| package for multilingual \sTeX,
% \item use the |mathhub| extensions to \sTeX for file system organization,
% \item enforce the one-module-one-file convention and make sure that the module name must
%   be the same as the (base name) of the file. 
% \end{compactitem}
% This allows use to abbreviate e.g. 
% \begin{verbatim}
% \importmhmodule[mhrepos=lib/archive,path=current/modfile]{modname}
% \end{verbatim}
%  by\DescribeMacro{\gimport}|\gimport[lib/archive]{modname}| and analogously for
% \DescribeMacro{\guse}|\guse|. 
%   \ednote{document them}
% \end{omgroup}
% 
% \begin{omgroup}[id=user:relations]{Terminological Relations}
%   \ednote{document them}
% \end{omgroup}
% 
% \begin{omgroup}[id=user:glossary]{Presenting Glossaries}
%
% The |smglom| package provides the \DescribeMacro{smglossary}|smglossary| environment
% for presenting glossaries. This expects a sequence of
% \begin{itemize}
% \item glossary entries marked up using the \DescribeMacro{smentry}|smentry| environment, which contains a definition.
% \item synonym references marked up \DescribeMacro{\smsynonymref}|\smsynonymref|
% \item joint definition references marked up \DescribeMacro{\smjointdefref}|\smjointdefref|
% \end{itemize}
% The latter two mark up cross references for definitions that contain more than one
% |\defi*| and would otherwise result in multiple (often more than a handful) copies of
% the same definition and thus lead to rambling glossaries. 
%
% The following snippet is a typical example, showing all three cases. 
% \begin{verbatim}
% \begin{smglossary}
%   \smjointdefref{zero vector}{x6e12a4211dd6546c}{vector space}
%   \begin{smentry}{\hypertarget{x4d4e8afd0e133715}{zerofree}}{smglom/numbers}
%     \guse[smglom/numbers]{zerofree}
%     An \trefi[integernumbers]{integer} whose decimal digits
%     \trefi[positional-number-system]{digit} no zeros is said to be \defi{zerofree}.
%   \end{smentry}
%   \smsynonymref{well-ordering}{x1e9bbb88fb4d90b3}{well-order}
% \end{smglossary}
% \end{verbatim}
% The \sTeX universe has a set of LMH scripts~\cite{URL:lmhtools:github} that allow to
% generate glossaries and dictionaries from \sTeX sources, such as~\cite{SMGloM:git}.
% \end{omgroup}
% \end{omgroup}
% 
% \StopEventually{\newpage\PrintIndex\newpage\PrintChanges\printbibliography}\newpage
%
% \begin{omgroup}[id=sec:impl:cls]{Implementation: The SMGloM Class}
%
% \begin{omgroup}[id=sec:impl:cls:options]{Class Options}
%
% To initialize the |smglom| class, we pass on all options to |omdoc.cls| as well as the
% |stex| and |smglom| packages. 
% 
%    \begin{macrocode}
%<*cls>
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{omdoc}
                           \PassOptionsToPackage{\CurrentOption}{stex}
                           \PassOptionsToPackage{\CurrentOption}{smglom}}
\ProcessOptions
%    \end{macrocode}
% 
% We load |omdoc.cls|, the |smglom| package that provides the SMGloM-specific
% functionality\ednote{MK:describe that above}, and the |stex| package to allow OMDoc
% compatibility. 
%
%    \begin{macrocode}
\LoadClass{omdoc}
\RequirePackage{smglom}
\RequirePackage{stex}
\RequirePackage{amstext}
\RequirePackage{amsfonts}
%</cls>
%    \end{macrocode}
%
% Now we do the same thing for the package; first the options, which we just pass on to
% the |stex| package.  But we also make sure that the |modules| package is loaded with the
% |mh| option, since the |smglom| package depends on these extensions.
%
%    \begin{macrocode}
%<*sty>
\PassOptionsToPackage{mh}{modules}
\DeclareOption*{\PassOptionsToPackage{\CurrentOption}{statements}
                          \PassOptionsToPackage{\CurrentOption}{dcm}
                          \PassOptionsToPackage{\CurrentOption}{cmath}
                          \PassOptionsToPackage{\CurrentOption}{structview}
                          \PassOptionsToPackage{\CurrentOption}{smultiling}}
\ProcessOptions
%    \end{macrocode}
%
% We load |omdoc.cls|, and the desired packages. For the {\latexml} bindings, we make sure
% the right packages are loaded.
%
%    \begin{macrocode}
\RequirePackage{statements}
\RequirePackage[langfiles]{smultiling}
\RequirePackage{structview}
\RequirePackage{dcm}
\RequirePackage{cmath}
\RequirePackage[base]{babel}
%    \end{macrocode}
%
% We set up triggers for the other languages, currently only German.
%
%    \begin{macrocode}
\AfterBabelLanguage{ngerman}{\input{smglom-ngerman.ldf}}
%    \end{macrocode}
%
% \end{omgroup}
% 
% \begin{omgroup}[id=impl:modules]{Convenience Macros for \protect\smglom Modules}
% \begin{macro}{\gimport}
% Just a shortcut, we have a starred and unstarred version, the first one is conservative.
% For example, if we execute:\newline
% \begin{center}
% |\gimport[smglom/numberfields]{naturalnumbers}|\newline
% \end{center}
% First we are redirected to |\@gimport@nostar|, we store the
% |smglom/numberfields|\meta{the repo's path} in |\@test|, then store
% |\mh@currentrepos|\meta{current directory} in |\mh@repos|. If no repo's path is offered,
% that means the module to import is under the same directory, so we let |mhrepos=\mh@repos|
% and pass bunch of parameters to |\importmhmodule|, which is defined in |module.sty|. If
% there's a repo's path, then we let |mhrepos=|\meta{the repo's path}. Finally we use
% |\mhcurrentrepos|(defined in |module.sty|) to change the |\mh@currentrepos|.
%    \begin{macrocode}
\def\gimport{\@ifstar\@gimport@star\@gimport@nostar}%
\newrobustcmd\@gimport@star[2][]{\def\@test{#1}%
\edef\mh@@repos{\mh@currentrepos}%
\ifx\@test\@empty%
\importmhmodule[conservative,mhrepos=\mh@@repos,path=#2]{#2}%
\else\importmhmodule[conservative,mhrepos=#1,path=#2]{#2}\fi%
\mhcurrentrepos{\mh@@repos}%
\ignorespacesandpars\usemodule@maybesetcodes}
\newrobustcmd\@gimport@nostar[2][]{\def\@test{#1}%
\edef\mh@@repos{\mh@currentrepos}%
\ifx\@test\@empty%
\importmhmodule[mhrepos=\mh@@repos,path=#2]{#2}%
\else\importmhmodule[mhrepos=#1,path=#2]{#2}\fi%
\mhcurrentrepos{\mh@@repos}%
\ignorespacesandpars\usemodule@maybesetcodes}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{guse}
%   just a shortcut
%    \begin{macrocode}
\newrobustcmd\guse[2][]{\def\@test{#1}%
\edef\mh@@repos{\mh@currentrepos}%
\ifx\@test\@empty%
\usemhmodule[mhrepos=\mh@@repos,path=#2]{#2}%
\else\usemhmodule[mhrepos=#1,path=#2]{#2}\fi%
\mhcurrentrepos{\mh@@repos}%
\ignorespacesandpars}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{gstructure}
%   we essentially copy over the definition of |mhstructure|, but adapt it to the \smglom
%   situation.
%    \begin{macrocode}
\newenvironment{gstructure}[3][]{\def\@test{#1}%
  \xdef\mh@@@repos{\mh@currentrepos}%
  \ifx\@test\@empty%
    \gdef\@@doit{\importmhmodule[mhrepos=\mh@@@repos,path=#3]{#3}}%
  \else%
    \gdef\@@doit{\importmhmodule[mhrepos=#1,path=#3]{#3}}%
  \fi%
  \ifmod@show\par\noindent structure import "#2" from module #3 \@@doit\fi%
  \ignorespacesandpars}
{\aftergroup\@@doit\ifmod@show end import\fi%
  \ignorespacesandparsafterend}
%    \end{macrocode}
% \end{environment}
% \end{omgroup}
% 
% \begin{omgroup}[id=impl:relations]{Terminological Relations}
%
% \begin{macro}{*nym}
%    \begin{macrocode}
\newrobustcmd\hypernym[3][]{\if@importing\else\par\noindent #2 is a hypernym of #3\fi}%
\newrobustcmd\hyponym[3][]{\if@importing\else\par\noindent #2 is a hyponym of  #3\fi}%
\newrobustcmd\meronym[3][]{\if@importing\else\par\noindent #2 is a meronym of #3\fi}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\MSC}
%   to define the Math Subject Classification, \ednote{MK: what to do for the LaTeXML side?}
%    \begin{macrocode}
\newrobustcmd\MSC[1]{\if@importing\else MSC: #1\fi\ignorespacesandpars}%
%    \end{macrocode}
% \end{macro}
% \end{omgroup}
% 
% \begin{omgroup}[id=sec:langbindings]{For Language Bindings}
%
% Here we adapt the |smultiling| functionality to the special situation, where the module
% and file names are identical by design. 
%
% \begin{environment}{gviewsig}
%   The |gviewsig| environment is just a layer over the |mhviewsig| environment with the keys
%   suitably adapted.
%    \begin{macrocode}
\newenvironment{gviewsig}[4][]{% keys, id, from, to
  \def\test{#1}%
  \ifx\@test\@empty%
    \begin{mhviewsig}[frompath=#3,topath=#4]{#2}{#3}{#4}%
  \else%
    \begin{mhviewsig}[frompath=#3,topath=#4,#1]{#2}{#3}{#4}%
  \fi%
  \ignorespacesandpars%
}{%
  \end{mhviewsig}%
  \ignorespacesandparsafterend%
}%
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{gviewnl}
%   The |gviewnl| environment is just a layer over the |mhviewnl| environment with the
%   keys suitably adapted.
%    \begin{macrocode}
\newenvironment{gviewnl}[5][]{% keys, id, lang, from, to
  \def\@test{#1}\ifx\@test\@empty%
    \begin{mhviewnl}[frompath=#4,topath=#5]{#2}{#3}{#4}{#5}%
  \else%
    \begin{mhviewnl}[frompath=#4,topath=#5,#1]{#2}{#3}{#4}{#5}%
  \fi%
\ignorespacesandpars%
}{%
  \end{mhviewnl}%
  \ignorespacesandparsafterend%
}%
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\gincludeview}
%   \ednote{This is fake for now, needs to be implemented and documented}
%    \begin{macrocode}
\newcommand\gincludeview[2][]{\ignorespacesandpars}%
%    \end{macrocode}
% \end{macro}
% \end{omgroup}
% 
% \begin{omgroup}{Authoring States, etc}
% We add a key to the module environment.
%    \begin{macrocode}
\addmetakey{module}{state}%
%    \end{macrocode}
% \end{omgroup}
%
% \begin{omgroup}{Shadowing of repositories}
% \begin{macro}{\repos@macro} 
%   |\repos@macro| parses a GitLab repository name \meta{group}|/|\meta{name} and creates
%   an internal macro name from that, which will be used 
%    \begin{macrocode}
\def\repos@macro#1/#2;{#1@shadows@#2}%
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\shadow} 
%   |\shadow{|\meta{orig}|}{|\meta{fork}|}| declares a that the private repository
%   \meta{fork} shadows the MathHub repository \meta{orig}. Internally, it simply defines
%   an internal macro with the shadowing information.
%    \begin{macrocode}
\def\shadow#1#2{\@namedef{\repos@macro#1;}{#2}}%
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\MathHubPath} 
%   |\MathHubPath{|\meta{repos}|}| computes the path of the fork that shadows the MathHub
%   repository \meta{repos} according to the current |\shadow| specification. The computed
%   path can be used for loading modules from the private version of \meta{repos}. 
%    \begin{macrocode}
\def\MathHubPath#1{\@ifundefined{\repos@macro#1;}{#1}{\@nameuse{\repos@macro#1;}}}%
%    \end{macrocode}
% \end{macro}
% \end{omgroup}
%
% \begin{omgroup}[id=impl:glossary]{Building Glossaries}
%
% \begin{environment}{smentry}
%    \begin{macrocode}
\newenvironment{smentry}[2]%
{\item[\textbf{#1}]\mhcurrentrepos{#2}\begin{module}[id=foo]\begin{definition}[display=flow]}
{\end{definition}\end{module}}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{smglossary}
%    \begin{macrocode}
\newenvironment{smglossary}{\begin{itemize}}{\end{itemize}}
%    \end{macrocode}
% \end{environment}
%
% \begin{macro}{\smsynonymref} 
%    \begin{macrocode}
\newcommand\smglom@synonymref@kw{See}
\newcommand\smsynonymref[3]{\item[\textbf{#1}] \smglom@synonymref@kw\ \textcolor{blue}{\hyperlink{#2}{#3}}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\smjointdefref} 
%    \begin{macrocode}
\newcommand\smglom@jointref@kw{Defined along with}
\newcommand\smjointdefref[3]{\item[\textbf{#1}] \smglom@jointref@kw\ \textcolor{blue}{\hyperlink{#2}{#3}}}
%</sty>
%    \end{macrocode}
% \end{macro}
% \end{omgroup}
% \end{omgroup} 
% \Finale
\endinput
% \iffalse
%%% Local Variables: 
%%% mode: doctex
%%% TeX-master: t
%%% End: 
% \fi

% LocalWords:  iffalse cls smglo smglo.dtx omdoc latexml texttt smlog.cls sref SMGloM ifx
% LocalWords:  maketitle newpage tableofcontents newpage omgroup ednote ltxml smglom.dtx
% LocalWords:  printbibliography showmeta metakeys amstext ginput newrobustcmd sproof cmath
% LocalWords:  module-defs gimport renewrobustcmd langbindings gle newenvironment amsfonts
% LocalWords:  doctex NeedsTeXFormat langfiles ngerman smultiling xspace formalizations
%  LocalWords:  symalign symalign symi textbf modalign modalign ESet emptyset initialize
%  LocalWords:  stex impl:modules unstarred numberfields mh@currentrepos mh@repos 1,ext
%  LocalWords:  importmhmodule mhcurrentrepos conservative,repos tex,path guse gstructure
%  LocalWords:  ignorespacesandpars usemhmodule mhstructure xdef gdef 3,ext 1,path nym
%  LocalWords:  ifmod@show noindent aftergroup ignorespacesandparsafterend impl:relations
%  LocalWords:  impl:alignments newcommand begingroup catcode`_ gviewsig mhviewsig 1,ext
%  LocalWords:  3,topath gviewnl mhviewnl 4,topath gincludeview addmetakey compactitem
%  LocalWords:  GinIanJuc:spsttom16,Kohlhase:dmesmgm14,SMGloM:git mathhub mhrepos modfile
%  LocalWords:  archive,path modname 3,ext 1,path ignorespaces 3,topath 4,topath 1,ext
%  LocalWords:  3,ext 1,path 3,topath 4,topath ctancite Kohlhase:ssmtl Kohlhase:smomdl
%  LocalWords:  smglossary smglossary smgentry synonymref synonymref seeref seeref 1,ext
%  LocalWords:  jointdefref 3,ext 1,path 3,topath 4,topath impl:glossary localization
%  LocalWords:  smentry smentry smsynonymref smsynonymref smjointdefref smjointdefref
%  LocalWords:  smglom-ngerman.ldf 1,ext 3,ext 1,path 3,topath 4,topath
