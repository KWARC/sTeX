# -*- CPERL -*-
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Global;
use LaTeXML::Package;
DeclareOption('showmeta',sub {PassOptions('metakeys','sty',ToString(Digest(T_CS('\CurrentOption')))); });
DeclareOption(undef,sub {PassOptions('article','cls',ToString(Digest(T_CS('\CurrentOption')))); });
ProcessOptions();
LoadClass('article');
RequirePackage('modules');
RequirePackage('owl2onto');
RegisterNamespace('owl'=>"http://www.w3.org/2002/07/owl#");
RegisterNamespace('stex'=>"http://kwarc.info/ns/sTeX");
RegisterNamespace('ltx'=>"http://dlmf.nist.gov/LaTeXML");
RegisterNamespace('omdoc'=>"http://omdoc.org/ns");
RelaxNGSchema('owl2+ltxml',
        '#default'=>"http://www.w3.org/2002/07/owl#",
        'omdoc'=>"http://omdoc.org/ns",
        'ltx'=>"http://dlmf.nist.gov/LaTeXML",
        'stex'=>"http://kwarc.info/ns/sTeX");
DefEnvironment('{ontology} OptionalKeyVals:omdoc',
       "<owl:Ontology "
      .    "?&GetKeyVal(#1,'id')(xml:id='&GetKeyVal(#1,'id')')() "
              .    "?&GetKeyVal(#1,'baseURI')(xml:base='&GetKeyVal(#1,'baseURI')/')() "
              .    "?&GetKeyVal(#1,'baseURI')(ontologyIRI='&GetKeyVal(#1,'baseURI')')()>"
             .   "#body"
      ."</owl:Ontology>",
       beforeDigest=> sub { AssignValue(inPreamble=>0); },
       afterDigest=> sub { $_[0]->getGullet->flush; return; });#$
1;
