package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
\newcommand\usemhmodule[2][]{%
  \metasetkeys{importmhmodule}{#1}%
  \ifx\importmhmodule@path\@empty%
    \usemodule[ext=\importmhmodule@ext,id=\importmhmodule@id]{#2}%
  \else%
    \edef\mh@@repos{\mh@currentrepos}%
    \ifx\importmhmodule@repos\@empty%
    \else%
      \mhcurrentrepos{\importmhmodule@repos}%
    \fi%
    \usemodule[load=\MathHub{\mh@currentrepos/source/\importmhmodule@path},ext=\importmhmodule@ext,id=\importmhmodule@id]{#2}%
    \mhcurrentrepos\mh@@repos%
  \fi%
  \ignorespaces%
}%
\let\mhinput\mhinputref%
DeclareOption(undef,sub{PassOptions('omtext','sty',ToString(Digest(T_CS('\CurrentOption')))); });
ProcessOptions();
RequirePackage('omtext');
RequirePackage('mathhub');
sub mhgraphics {
  my ($gullet,$keyval,$arg2) = @_;
  my $repo_path;
  if ($keyval) {
    $repo_path = ToString(GetKeyVal($keyval,'mhrepos')); }
  if (! $repo_path) {
    $repo_path = ToString(Digest(T_CS('\mh@currentrepos'))); }
  else {
    $keyval->setValue('mhrepos',undef); }
  my $mathhub_base = ToString(Digest('\MathHub{}'));
  my $finalpath = $mathhub_base.$repo_path.'/source/'.ToString($arg2);
  return Invocation(T_CS('\@includegraphicx'), $keyval, T_OTHER($finalpath)); }#$
DefKeyVal('Gin','mhrepos','Semiverbatim');
DefMacro('\mhgraphics OptionalKeyVals:Gin {}', \&mhgraphics);
DefMacro('\mhcgraphics []{}','\begin{center}\mhgraphics[#1]{#2}\end{center}');
DefMacro('\mhbgraphics []{}','\fbox{\mhgraphics[#1]{#2}}');
