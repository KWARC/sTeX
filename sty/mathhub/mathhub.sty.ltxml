# -*- CPERL -*-
package LaTeXML::Package::Pool;
use strict;
use LaTeXML::Package;
use LaTeXML::Util::Pathname;
DeclareOption(undef,sub {});
ProcessOptions();
RequirePackage('keyval');
DefMacro('\mhcurrentrepos{}','\@mhcurrentrepos{#1}');
DefMacro('\@mhcurrentrepos{}','\def\mh@currentrepos{#1}\@@mhcurrentrepos{#1}');
DefConstructor('\@@mhcurrentrepos{}','',
  afterDigest => sub{ AssignValue('current_repos',ToString($_[1]->getArg(1)),'global'); } );
DefMacro('\modules@@first#1/#2;','#1');
DefMacro('\libinput {}', sub{
    my ($gullet, $name) = @_;
    $name = ToString($name);
    #Relative paths for recursive search
    my $FIRSTLIB = ('/../../../lib');
    my $SECONDLIB = ('/../../../../meta-info/lib');
    my $file = pathname_find($name, types => ['tex'], paths =>[$FIRSTLIB]);
    $file = pathname_find($name, types=>['tex'], paths=>[$SECONDLIB]) unless $file;
    # Singal error if the file cannot be found
    LaTeXML::Package::InputContent($file, noerror=>1); });
1;
